generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  category_id Int      @id @default(autoincrement()) @db.UnsignedInt
  name        String   @db.VarChar(45)
  laptop      laptop[]
}

model display {
  display_id      Int          @id @default(autoincrement()) @db.UnsignedInt
  manufacturer_id Int          @db.UnsignedInt
  name            String       @db.VarChar(45)
  size            Int
  width           Int
  height          Int
  type            display_type
  manufacturer    manufacturer @relation(fields: [manufacturer_id], references: [manufacturer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_display_manufacturer1")
  laptop          laptop[]

  @@index([manufacturer_id], map: "fk_display_manufacturer_id")
}

model gpu {
  gpu_id          Int          @id @default(autoincrement()) @db.UnsignedInt
  manufacturer_id Int          @db.UnsignedInt
  name            String       @db.VarChar(45)
  vram            Int
  tdp             Int
  type            gpu_type
  manufacturer    manufacturer @relation(fields: [manufacturer_id], references: [manufacturer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gpu_manufacturer1")
  laptop          laptop[]

  @@index([manufacturer_id], map: "fk_gpu_manufacturer_id")
}

model laptop {
  laptop_id        Int                @id @default(autoincrement()) @db.UnsignedInt
  manufacturer_id  Int                @db.UnsignedInt
  storage_id       Int                @db.UnsignedInt
  processor_id     Int                @db.UnsignedInt
  gpu_id           Int                @db.UnsignedInt
  display_id       Int                @db.UnsignedInt
  category_id      Int                @db.UnsignedInt
  name             String             @db.VarChar(45)
  image_url        String?            @db.VarChar(255)
  price            Int?               @db.UnsignedInt
  favorite         favorite[]
  category         category           @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_category1")
  display          display            @relation(fields: [display_id], references: [display_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_display1")
  gpu              gpu                @relation(fields: [gpu_id], references: [gpu_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_gpu1")
  manufacturer     manufacturer       @relation(fields: [manufacturer_id], references: [manufacturer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_manufacturer")
  processor        processor          @relation(fields: [processor_id], references: [processor_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_processor1")
  storage          storage            @relation(fields: [storage_id], references: [storage_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_storage1")
  review           review[]
  transaction_item transaction_item[]

  @@index([category_id], map: "fk_laptop_category_id")
  @@index([display_id], map: "fk_laptop_display_id")
  @@index([gpu_id], map: "fk_laptop_gpu_id")
  @@index([manufacturer_id], map: "fk_laptop_manufacturer_id")
  @@index([processor_id], map: "fk_laptop_processor_id")
  @@index([storage_id], map: "fk_laptop_storage_id")
}

model manufacturer {
  manufacturer_id Int         @id @default(autoincrement()) @db.UnsignedInt
  name            String      @db.VarChar(45)
  description     String?     @db.Text
  display         display[]
  gpu             gpu[]
  laptop          laptop[]
  processor       processor[]
  storage         storage[]
}

model processor {
  processor_id       Int          @id @default(autoincrement()) @db.UnsignedInt
  manufacturer_id    Int          @db.UnsignedInt
  name               String       @db.VarChar(45)
  core_count         Int
  tdp                Int
  hyper_thread_count Int?
  laptop             laptop[]
  manufacturer       manufacturer @relation(fields: [manufacturer_id], references: [manufacturer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_processor_manufacturer1")

  @@index([manufacturer_id], map: "fk_processor_manufacturer_id")
}

model storage {
  storage_id      Int          @id @default(autoincrement()) @db.UnsignedInt
  manufacturer_id Int          @db.UnsignedInt
  name            String       @db.VarChar(45)
  type            storage_type
  laptop          laptop[]
  manufacturer    manufacturer @relation(fields: [manufacturer_id], references: [manufacturer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_storage_manufacturer1")

  @@index([manufacturer_id], map: "fk_storage_manufacturer_id")
}

model user {
  user_id     Int           @id @default(autoincrement()) @db.UnsignedInt
  username    String        @db.VarChar(45)
  email       String        @db.VarChar(45)
  password    String        @db.VarChar(256)
  status      user_status   @default(NORMAL)
  favorite    favorite[]
  review      review[]
  transaction transaction[]
}

model favorite {
  favorite_id Int    @id @default(autoincrement()) @db.UnsignedInt
  user_id     Int    @db.UnsignedInt
  laptop_id   Int    @db.UnsignedInt
  laptop      laptop @relation(fields: [laptop_id], references: [laptop_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_favorite_laptop_id")
  user        user   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_favorite_user_id")

  @@index([laptop_id], map: "fk_favorite_laptop_id")
  @@index([user_id], map: "fk_favorite_user_id")
}

model transaction {
  transaction_id   Int                @id @default(autoincrement()) @db.UnsignedInt
  user_id          Int                @db.UnsignedInt
  total_amount     Int
  created_at       DateTime           @default(dbgenerated("(now())")) @db.DateTime(0)
  user             user               @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaction_user_id")
  transaction_item transaction_item[]

  @@index([user_id], map: "fk_transaction_user_id")
}

model transaction_item {
  transaction_item_id Int         @id @default(autoincrement()) @db.UnsignedInt
  transaction_id      Int         @db.UnsignedInt
  laptop_id           Int         @db.UnsignedInt
  laptop_price        Int
  laptop_name         String      @db.VarChar(255)
  laptop_category     String      @db.VarChar(255)
  laptop              laptop      @relation(fields: [laptop_id], references: [laptop_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaction_item_laptop_id")
  transaction         transaction @relation(fields: [transaction_id], references: [transaction_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaction_item_transaction_id")

  @@index([laptop_id], map: "fk_transaction_item_laptop_id")
  @@index([transaction_id], map: "fk_transaction_item_transaction_id")
}

model review {
  review_id  Int      @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int      @db.UnsignedInt
  laptop_id  Int      @db.UnsignedInt
  rating     Int      @db.UnsignedInt
  comment    String   @db.VarChar(255)
  created_at DateTime @default(dbgenerated("(now())")) @db.DateTime(0)
  laptop     laptop   @relation(fields: [laptop_id], references: [laptop_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_review_laptop_id")
  user       user     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_review_user_id")

  @@index([laptop_id], map: "fk_review_laptop_id")
  @@index([user_id], map: "fk_review_user_id")
}

enum storage_type {
  M2_SSD   @map("M2 SSD")
  HDD
  SATA_SSD @map("SATA SSD")
}

enum user_status {
  NORMAL
  ADMIN
}

enum gpu_type {
  INTEGRATED
  DEDICATED
}

enum display_type {
  OLED
  IPS
  TN
  miniLED
  QD_OLED @map("QD-OLED")
  VA
}
